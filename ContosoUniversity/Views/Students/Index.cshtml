@model PaginatedList<ContosoUniversity.Models.Student>

@{
    ViewData["Title"] = "Student List";
}

<h2>All Contoso Uni Students!</h2>

<p>
    <a asp-action="Create" class="btn btn-success">Add a new student!</a>
</p>

<!--this right here is my search bar!-->
<form asp-action="Index" method="get">
    <!--http get ensures form data is passed in the URL as query strings(able to bookmark)-->
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <!--search bar and bring in view data for the search string-->
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index" class="btn btn-default">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <!--uses the information in ViewData properties to set up
                    hyperlinks with the appropriate query string values.-->
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    <!--we have now added the paging links/filters to the table header-->
                    Last Name
                </a>
            </th>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Enrollment Date
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-default">Edit Info</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-default">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id"class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<!--the paging buttons are displayed here by with tag helpers!-->

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
